# Documentation: http://docs.travis-ci.com/user/languages/julia/
language: julia
os:
  - linux
  - osx
julia:
  - 1.0
  - 1.3
  - nightly
jobs:
  allow_failures:
    - julia: nightly
  include:
    - stage: "Testing"
      script:
        - if [[ -a .git/shallow ]]; then git fetch --unshallow; fi
        - travis_wait 45 julia --project --color=yes --check-bounds=yes -e 'using Pkg; Pkg.instantiate(); Pkg.build(); Pkg.test( ; coverage=true)';        
      
    - stage: "Documentation"
      julia: 1.3
      os: linux
      script:
        - julia --project=docs/ -e 'using Pkg; Pkg.add("Documenter"); Pkg.add("DirectSum"); Pkg.add("AbstractTensors"); Pkg.add("Leibniz"); Pkg.develop(PackageSpec(path=pwd()))'
        - julia --project=docs/ docs/make.jl
      after_success: skip
      
notifications:
  email: false
  
after_success:  
  - julia -e 'using Pkg; Pkg.add("Coverage"); using Coverage; Codecov.submit(process_folder()); Coveralls.submit(process_folder())'
  




# # Documentation: http://docs.travis-ci.com/user/languages/julia/
# language: julia
# os:
#   - linux
#   - osx
# julia:
#   - 1.0
#   - 1.3
#   - nightly 
  
# script:
#   - if [[ -a .git/shallow ]]; then git fetch --unshallow; fi
#   - travis_wait 45 julia --project --color=yes --check-bounds=yes -e 'using Pkg; Pkg.instantiate(); Pkg.build(); Pkg.test( ; coverage=true)';
        
# matrix:
#   allow_failures:
#     - julia: nightly
#     - os: osx
#   fast_finish: true
#   include:    
#     - stage: "Documentation"
#       julia: 1.3
#       os: linux
#       script:
#         - julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd()));
#                                                Pkg.instantiate()'
#         - julia --project=docs/ docs/make.jl
#       after_success: skip


# notifications:
#   email: false

# after_success:
#   # push coverage results to Coveralls
#   - julia -e 'import Pkg; Pkg.add("Coverage"); using Coverage; Coveralls.submit(Coveralls.process_folder())'
#   # push coverage results to Codecov
#   - julia -e 'import Pkg; Pkg.add("Coverage"); using Coverage; Codecov.submit(Codecov.process_folder())
